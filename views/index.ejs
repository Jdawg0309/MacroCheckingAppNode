<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Macro and Calorie Tracking</title>
    <link rel="stylesheet" href="../public/formDecoration.css">
    <style>
        body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
}

.navbar {
    background-color: #333;
    color: white;
    padding: 10px 20px;
    text-align: center;
}

.container{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 80%;
    margin: auto;
}

.navbar-title {
    margin: 0;
    font-size: 24px;
}

#tracking-form {
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    margin: 20px auto;
}

label {
    display: block;
    margin: 10px 0 5px;
}

input[type="date"],
input[type="text"],
input[type="number"],
select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box;
}

input[type="date"]:focus,
input[type="text"]:focus,
input[type="number"]:focus,
select:focus {
    border-color: #66afe9;
    outline: none;
}

button {
    background-color: #28a745;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    width: 100%;
    margin-top: 10px;
}

button:hover {
    background-color: #218838;
}

table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin: 30px;
    }

    th, td {
        padding: 12px;
        border: 1px solid #dee2e6;
        text-align: left;
    }

    th {
        background-color: #218838;
        color: white;
        text-transform: uppercase;
    }

    tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    tr:hover {
        background-color: #e9ecef;
    }

    .delete-btn {
        background-color: #dc3545;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 5px 10px;
        cursor: pointer;
    }

    .delete-btn:hover {
        background-color: #c82333;
    }

    @media (max-width: 600px) {
        form, table {
            width: 100%;
        }

        input, button {
            width: 90%;
        }
    }
</style>
</head>

<body>
    <nav class="navbar">
        <ul class="navbar-links">
            <h1 class="navbar-title">Macro Fitness</h1>
        </ul>
    </nav>

    <form id="tracking-form" action="/objects" method="POST">
        <label for="date">Date:</label>
        <input type="date" id="date" name="date" required>

        <label for="meal">Meal Type:</label>
        <select id="meal" name="meal" required>
            <option value="breakfast">Breakfast</option>
            <option value="lunch">Lunch</option>
            <option value="dinner">Dinner</option>
            <option value="snack">Snack</option>
        </select>

        <label for="food-item">Food Item:</label>
        <input type="text" id="food-item" name="food-item" required>

        <label for="servings">Servings:</label>
        <input type="text" id="servings" name="servings" required>

        <label for="calories">Calories Per Serving:</label>
        <input type="number" id="calories" name="calories" required>

        <label for="protein">Protein (g):</label>
        <input type="number" id="protein" name="protein">

        <label for="carbs">Carbohydrates (g):</label>
        <input type="number" id="carbs" name="carbs">

        <label for="fats">Fats (g):</label>
        <input type="number" id="fats" name="fats">

        <button type="submit">Add Entry</button>
    </form>

    <div class="container">
        <table>
            <h2 style="text-align: center;">Meal Log</h2>
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Meal</th>
                    <th>Food Item</th>
                    <th>Servings</th>
                    <th>Calories</th>
                    <th>Protein</th>
                    <th>Carbs</th>
                    <th>Fats</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="meal-log"></tbody>
        </table>
    </div>  
    <script>
        function addEntryToDOM(entry) {
            const tableBody = document.getElementById('meal-log');
            const row = document.createElement('tr');

            row.innerHTML = `
                <td>${entry.date}</td>
                <td>${entry.meal}</td>
                <td>${entry['food-item']}</td>
                <td>${entry.servings}</td>
                <td>${entry.calories}</td>
                <td>${entry.protein}</td>
                <td>${entry.carbs}</td>
                <td>${entry.fats}</td>
                <td><button class="delete-btn">Delete</button></td>
            `;

            tableBody.appendChild(row);

            row.querySelector('.delete-btn').addEventListener('click', () => {
                row.remove();
                console.log(`Deleted entry for ${entry['food-item']} on ${entry.date}`);
            });
        }

        function fetchEntries() {
            fetch('/objects')
                .then((response) => response.json())
                .then((data) => {
                    data.forEach(addEntryToDOM);
                })
                .catch((error) => {
                    console.error('Error fetching entries:', error);
                });
        }

        document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('meal-form');

    if (!form) {
        console.error('Form element not found!');
        return;
    }

    form.addEventListener('submit', async function (e) {
        e.preventDefault();

        try {
            const formData = new FormData(e.target);
            const entry = Object.fromEntries(formData);

            const response = await fetch('/objects', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(entry),
            });

            if (!response.ok) {
                throw new Error(`Server responded with status: ${response.status}`);
            }

            const newEntry = await response.json();
            addEntryToDOM(newEntry);
            e.target.reset();
        } catch (error) {
            console.error('Error adding entry:', error);
        }
    });
});

        fetchEntries();
    </script>
</body>
</html>